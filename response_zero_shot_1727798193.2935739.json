{
  "strategy": "zero_shot",
  "prompt_prefix": "-- Create Vendors table\nCREATE TABLE IF NOT EXISTS Vendors (\n    VendorID INTEGER PRIMARY KEY AUTOINCREMENT,\n    VendorName TEXT NOT NULL,\n    VendorDescription TEXT,\n    VendorPhoneNumber TEXT,\n    VendorCategory TEXT,\n    VendorLocation TEXT\n);\n\n-- Create Products table with foreign key reference to Vendors\nCREATE TABLE IF NOT EXISTS Products (\n    ProductID INTEGER PRIMARY KEY AUTOINCREMENT,\n    ProductName TEXT NOT NULL,\n    ProductPrice REAL NOT NULL,\n    ProductImage TEXT,\n    VendorID INTEGER,\n    FOREIGN KEY (VendorID) REFERENCES Vendors(VendorID)\n);\n\n-- Create Ratings table with foreign key reference to Vendors\nCREATE TABLE IF NOT EXISTS Ratings (\n    RatingID INTEGER PRIMARY KEY AUTOINCREMENT,\n    VendorID INTEGER,\n    CustomerName TEXT NOT NULL,\n    RatingValue REAL NOT NULL,\n    RatingDate DATE NOT NULL,\n    FOREIGN KEY (VendorID) REFERENCES Vendors(VendorID)\n);\n\n-- Create Orders table with foreign key references to Vendors and Products\nCREATE TABLE IF NOT EXISTS Orders (\n    OrderID INTEGER PRIMARY KEY AUTOINCREMENT,\n    VendorID INTEGER,\n    ProductID INTEGER,\n    Quantity INTEGER NOT NULL,\n    OrderDate DATE NOT NULL,\n    FOREIGN KEY (VendorID) REFERENCES Vendors(VendorID),\n    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)\n);\n Give me a sqlite select statement that answers the question. Only respond with sqlite syntax.",
  "questionResults": [
    {
      "question": "Which vendors sell products priced over $20?",
      "sql": "SELECT Vendors.VendorName\nFROM Vendors \nINNER JOIN Products ON Vendors.VendorID = Products.VendorID\nWHERE Products.ProductPrice > 20;",
      "queryRawResponse": "[]",
      "friendlyResponse": "It seems like currently, we don't have any vendors selling products priced over $20. Please feel free to check back later as our vendor list is constantly being updated.",
      "error": "None"
    },
    {
      "question": "Which vendors have the highest rating?",
      "sql": "SELECT \nVendors.VendorID, \nVendors.VendorName, \nMAX(Ratings.RatingValue) as MaxRating\nFROM \nVendors \nINNER JOIN \nRatings \nON Vendors.VendorID = Ratings.VendorID\nGROUP BY \nVendors.VendorID, \nVendors.VendorName\nORDER BY \nMaxRating DESC;",
      "queryRawResponse": "[(1, 'Panader\u00eda El Salvador', 5.0), (2, 'El Rinc\u00f3n del Caf\u00e9', 5.0), (5, 'Pura Vida Tienda', 5.0), (3, 'Mercado Flores', 4.0), (4, 'McDonalds', 4.0)]",
      "friendlyResponse": "The vendors with the highest rating are Panader\u00eda El Salvador, El Rinc\u00f3n del Caf\u00e9, and Pura Vida Tienda, all with a perfect score of 5.0. Following them are Mercado Flores and McDonald's, both with a rating of 4.0.",
      "error": "None"
    },
    {
      "question": "Which vendors are located in Guatemala City?",
      "sql": "SELECT VendorName \nFROM Vendors \nWHERE VendorLocation = 'Guatemala City';",
      "queryRawResponse": "[('Panader\u00eda El Salvador',), ('McDonalds',)]",
      "friendlyResponse": "The vendors located in Guatemala City include Panader\u00eda El Salvador and McDonalds.",
      "error": "None"
    },
    {
      "question": "What products are sold in Antigua Guatemala?",
      "sql": "SELECT Products.ProductName\nFROM Products\nINNER JOIN Vendors ON Products.VendorID = Vendors.VendorID\nWHERE Vendors.VendorLocation = 'Antigua Guatemala';",
      "queryRawResponse": "[('Espresso',), ('Caf\u00e9 Latte',)]",
      "friendlyResponse": "In Antigua Guatemala, you can purchase products like Espresso and Caf\u00e9 Latte.",
      "error": "None"
    },
    {
      "question": "Which customers gave a 5-star rating?",
      "sql": "SELECT CustomerName \nFROM Ratings \nWHERE RatingValue = 5;",
      "queryRawResponse": "[('Jane Smith',), ('Maria L\u00f3pez',), ('Ana P\u00e9rez',)]",
      "friendlyResponse": "The customers who gave a 5-star rating are Jane Smith, Maria L\u00f3pez, and Ana P\u00e9rez.",
      "error": "None"
    }
  ]
}