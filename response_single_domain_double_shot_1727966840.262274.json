{
  "strategy": "single_domain_double_shot",
  "prompt_prefix": "-- Create Vendors table\nCREATE TABLE IF NOT EXISTS Vendors (\n    VendorID INTEGER PRIMARY KEY AUTOINCREMENT,\n    VendorName TEXT NOT NULL,\n    VendorDescription TEXT,\n    VendorPhoneNumber TEXT,\n    VendorCategory TEXT,\n    VendorLocation TEXT\n);\n\n-- Create Products table with foreign key reference to Vendors\nCREATE TABLE IF NOT EXISTS Products (\n    ProductID INTEGER PRIMARY KEY AUTOINCREMENT,\n    ProductName TEXT NOT NULL,\n    ProductPrice REAL NOT NULL,\n    ProductImage TEXT,\n    VendorID INTEGER,\n    FOREIGN KEY (VendorID) REFERENCES Vendors(VendorID)\n);\n\n-- Create Ratings table with foreign key reference to Vendors\nCREATE TABLE IF NOT EXISTS Ratings (\n    RatingID INTEGER PRIMARY KEY AUTOINCREMENT,\n    VendorID INTEGER,\n    CustomerName TEXT NOT NULL,\n    RatingValue REAL NOT NULL,\n    RatingDate DATE NOT NULL,\n    FOREIGN KEY (VendorID) REFERENCES Vendors(VendorID)\n);\n\n-- Create Orders table with foreign key references to Vendors and Products\nCREATE TABLE IF NOT EXISTS Orders (\n    OrderID INTEGER PRIMARY KEY AUTOINCREMENT,\n    VendorID INTEGER,\n    ProductID INTEGER,\n    Quantity INTEGER NOT NULL,\n    OrderDate DATE NOT NULL,\n    FOREIGN KEY (VendorID) REFERENCES Vendors(VendorID),\n    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)\n);\n Which vendors sell products priced over $20?  \nSELECT vendorname FROM Vendors WHERE VendorID IN (SELECT VendorID FROM Products WHERE ProductPrice > 20);\n  Give me a sqlite select statement that answers the question. Only respond with sqlite syntax.",
  "questionResults": [
    {
      "question": "Which vendors sell products priced over $10?",
      "sql": "SELECT VendorName FROM Vendors WHERE VendorID IN (SELECT VendorID FROM Products WHERE ProductPrice > 10);",
      "queryRawResponse": "[('Pura Vida Tienda',)]",
      "friendlyResponse": "Sure, the vendor that sells products priced over $10 is Pura Vida Tienda.",
      "error": "None"
    },
    {
      "question": "Which vendors have the lowest rating?",
      "sql": "SELECT VendorName FROM Vendors WHERE VendorID IN (SELECT VendorID FROM Ratings ORDER BY RatingValue ASC LIMIT 1);",
      "queryRawResponse": "[('McDonalds',)]",
      "friendlyResponse": "Based on the information available, McDonald's has the lowest rating among vendors.",
      "error": "None"
    },
    {
      "question": "Which vendors are located in Mexico City?",
      "sql": "SELECT VendorName FROM Vendors WHERE VendorLocation = 'Mexico City';",
      "queryRawResponse": "[]",
      "friendlyResponse": "Sure, currently, we do not have any vendors located in Mexico City.",
      "error": "None"
    },
    {
      "question": "What products are sold in Antigua Guatemala?",
      "sql": "SELECT ProductName FROM Products WHERE VendorID IN (SELECT VendorID FROM Vendors WHERE VendorLocation = 'Antigua Guatemala');",
      "queryRawResponse": "[('Espresso',), ('Caf\u00e9 Latte',)]",
      "friendlyResponse": "In Antigua Guatemala, they sell products such as Espresso and Caf\u00e9 Latte.",
      "error": "None"
    },
    {
      "question": "Which customers gave a 2-star rating?",
      "sql": "SELECT CustomerName FROM Ratings WHERE RatingValue = 2;",
      "queryRawResponse": "[]",
      "friendlyResponse": "This means that there were no customers who gave a 2-star rating.",
      "error": "None"
    }
  ]
}